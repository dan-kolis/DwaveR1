

print("FL: whatsPegasys1213.py")
print("DT: 22 Oct 2020 Date time thing going");

import dwave_networkx as dnx

# D-Wave 2X
C = dnx.chimera_graph(12, 12, 4)

# D-Wave 2000Q
C = dnx.chimera_graph(16, 16, 4)

print("well, this ran so I am an expert, right ?")


#Introduction
#D-Wave NetworkX provides tools for working with Chimera and Pegasus graphs and implementations of graph-theory algorithms on the D-Wave system and other binary quadratic model samplers; for example, functions such as draw_chimera() provide easy visualization for Chimera graphs; functions such as maximum_cut() or min_vertex_cover() provide graph algorithms useful to optimization problems that fit well with the D-Wave system.

#Like the D-Wave system, all other supported samplers must have sample_qubo and sample_ising methods for solving Ising and QUBO models and return an iterable of samples in order of increasing energy. You can set a default sampler using the set_default_sampler() function.

#For an introduction to quantum processing unit (QPU) topologies such as the Chimera` and Pegasus graphs, see Topology.
#For an introduction to binary quadratic models (BQMs), see Binary Quadratic Models.
#For an introduction to samplers, see Samplers and Composites.
#you can see how to create Chimera graphs implemented in the D-Wave 2X and D-Wave 2000Q systems:

# Test some IO and import to see they connect
# Dan K 22 Oct 2020

from __future__ import print_function  # allow it to run on python2 and python3

import numpy as np
from dwave.system.samplers import DWaveSampler
from dwave.system import EmbeddingComposite, LazyFixedEmbeddingComposite

# packages needed for pegasus simulation
import neal
import dimod
import dwave_networkx as dnx
import networkx as nx
import dwave.embedding


print("FL: IOh1316 22 Oct 2020")
f = open("TestIoh1316.txt", "a")
f.write("Now the file has content3")
f.close()